# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
general:
  branches:
    ignore:
      - gh-pages

version: 2
jobs:
  build_code:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/udacidrone

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "circleci_requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r circleci_requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "circleci_requirements.txt" }}

      - run:
          name: lint
          command: |
            . venv/bin/activate
            flake8 udacidrone/ examples/ tests/
        
      - run:
          name: test
          command: |
            . venv/bin/activate
            pytest -vx

      - run:
          name: format
          command: |
            . venv/bin/activate
            yapf -i --recursive *.py examples/ udacidrone/ tests/
            isort --recursive *.py examples/ udacidrone/ tests/

      - store_artifacts:
          path: test-reports
          destination: test-reports

  deploy_website:
    docker:
      - image: circleci/node:6.10.3
    # machine:
    #   node:
    #     version: 6.11.2
    #   npm:
    #     version: 3.10.10

    working_directory: ~/udacidrone
    deployment:
      website:
        branch: master
        steps:
          - run:
            command: |
              git config --global user.email "domluna@users.noreply.github.com"
              git config --global user.name "Dominique Luna"
              echo "machine github.com login domluna password $GITHUB_TOKEN" > ~/.netrc
              cd website && npm install && GIT_USER=domluna npm run publish-gh-pages

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build_code
      - deploy_website
